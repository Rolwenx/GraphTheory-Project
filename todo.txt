DONE 1.	Reading a constraint table presented in a .txt file and storing it in memory

On each line, the first number is the task number,
the second is its duration,
and the other numbers (if present) are the constraints (predecessors) :

DONE 2.	Display of the corresponding graph in a matrix form (value matrix).
    Warning: the display must be done from memory, not directly from reading the .txt file.
    The graph must contain the two fictitious tasks alpha and omega
    (labeled 0 and N+1 where N is the number of tasks).

3.	Check the necessary properties of the graph such that it can serve as a scheduling graph
    - no cycle,
    - no negative edges.

4.	Compute the ranks for all vertices

--- WE HAVE 10 YOUHOU ---

5.	Compute the earliest dates, the latest dates, and the floats.
    For the computation of the latest dates, assume that the latest date of the end of project coincides with its earliest date.

6.	Compute the critical path(s) and display it or them

DONE Your program must be capable to « loop » on the constraint tables you’ve prepared. It would be a very bad idea to stop the program and launch it again every time you want to use a different constraint table. If this is the case, it will results in points off.